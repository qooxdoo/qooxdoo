#!/usr/bin/env node

/*
* taken from https://guyharwood.co.uk/2018/03/12/conditional-travis-builds-with-pull-request-labels/
* label id can be retrieved from https://api.github.com/repos/qooxdoo/qooxdoo/labels/<name>
*
* Script will return 0 if and only if the given label id is found. Otherwise,
* and in case of errors, 1 is returned.
*/

'use strict';

const https = require('https');
const pullRequestId = process.argv[2];
const skipCiLabelId = process.argv[3];

if (!pullRequestId) {
  console.log('Missing argument: pull request id.');
  process.exit(1)
}

if (pullRequestId === "false") {
  console.log('Not a pull request.');
  process.exit(1)
}

const pullRequestUrl = `/repos/qooxdoo/qooxdoo/pulls/${pullRequestId}`;

const options = {
  hostname: 'api.github.com',
  path: pullRequestUrl,
  method: 'GET',
  headers: {
    'User-Agent': 'node/https'
  }
};

const parseResponse = (res) => {
  let labels;
  try {
    labels = JSON.parse(res).labels;
    if (!labels || labels.length === 0) {
      console.log(`No labels found attached to PR ${pullRequestId}`);
      process.exit(1)
    }
  } catch (err) {
    console.error(`Error parsing labels for PR ${pullRequestId}`);
    console.error(err);
    process.exit(1)
  }
  const skipCiLabel = labels.find(item => item.id === skipCiLabelId);
  if (skipCiLabel) {
    console.log(`Skip CI label not found on PR ${pullRequestId}.`);
    process.exit(1)
  }
  console.log(`Skip CI label found on PR ${pullRequestId}.`);
  process.exit(0)
};

https.get(options, (response) => {
  let data = '';

  response.on('data', (chunk) => {
    data += chunk
  });

  response.on('end', () => {
    parseResponse(data)
  })
}).on('error', (err) => {
  console.error('Error: ' + err.message)
});
