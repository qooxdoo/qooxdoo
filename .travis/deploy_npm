#!/bin/bash

set -o errexit -o nounset

exe() { echo "\$ ${@/eval/}" ; "$@" ; }

cd ${TRAVIS_BUILD_DIR:-.}


BASE_DIR="$(git rev-parse --show-toplevel)"
FRAMEWORK_VERSION=$(cat $BASE_DIR/version.txt)
TAG_VERSION="$FRAMEWORK_VERSION"
REV=$(git rev-parse --short HEAD)
FRAMEWORK_DATE=$(date +%Y%m%d-%H%M)

# Adjust the framework version for non TAG builds
if [ "${TRAVIS_TAG:-}" = "" ]; then
   TAG_VERSION="$TAG_VERSION-$FRAMEWORK_DATE"
fi

echo "-------------------------------------------------------------------------"
echo "Travis Tag       : ${TRAVIS_TAG:-}"
echo "Framework version: $FRAMEWORK_VERSION"
echo "Revision         : $REV"
echo "Tag version      : $TAG_VERSION"
echo "TRAVIS_BUILD_DIR : ${TRAVIS_BUILD_DIR:-.}"
echo "Build source     : $BASE_DIR"
echo "-------------------------------------------------------------------------"

cd $BASE_DIR
if [ "{TRAVIS_TAG:-}" != "$FRAMEWORK_VERSION" ]; then
    echo "Bump version ..."
    exe tool/admin/bin/bumpqxversion.py $TAG_VERSION
fi

exe nvm -v
exe nvm install 11
exe node -v
exe npm -v

exe npm install
# compile framework
exe npx qx --version
exe npm update --no-save @qooxdoo/compiler
exe npx qx --version

exe npx qx pkg install -v 
# compile server first, compile.js of demobrowser runs npm install which will update all packages
exe npx qx compile compileServer.json --target build -v
exe npx qx compile compile.json       --target build -v 

#copy source
exe mkdir -p source
exe cp -rf ./framework/source/* ./source


# fill .npmrc with access token
echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN:-}" > ~/.npmrc
# publish to npm
exe npm publish --access public --verbose 

