{
  "name"    : "website",

  "include" :
  [
    {
      "path" : "${QOOXDOO_PATH}/tool/data/config/application.json",
      "block" : [
        "test-source",
        "test",
        "build",
        "source",
        "source-server",
        "source-httpd-config",
        "api-data",
        "api"
      ]
    },
    {
      "path" : "${QOOXDOO_PATH}/component/testrunner/portable.json",
      "as" : "testrunner-portable"
    },
    {
      "path" : "module.json",
      "block" : [
        "build-module-min"
      ]
    }
  ],

  "let" :
  {
    "APPLICATION"  : "library",
    "QOOXDOO_PATH" : "../../..",
    "API_EXCLUDE"  : ["qx.test.*"],
    "LOCALES"      : [ "en" ],
    "CACHE"        : "${TMPDIR}/qx${QOOXDOO_VERSION}/cache",
    "ROOT"         : ".",
    "TESTRUNNER_ROOT"  : "${QOOXDOO_PATH}/component/testrunner",
    "TESTRUNNER_VIEW" : "testrunner.view.Html",
    "SCRIPT_PATH"      : "script",
    "TEST_SCRIPT_PATH" : "./test/script",
    "API_SCRIPT_PATH"  : "api/script",
    "QXWEB_ALL" : [
      "qx.ui.website.*",
      "qx.module.*",
      "qxWeb"
    ],
    //"QFILES_VERSION_PART": "-${QOOXDOO_VERSION}",
    "QFILES_VERSION_PART": "",
    "API_INCLUDE" : "${QXWEB_ALL}"
  },

  "config-warnings" :
  {
    "job-shadowing" : [ "common", "testrunner-portable::build-script", "distclean", "clean", "build" ],

    "environment" : [ "non-literal-keys" ]
  },

  "jobs" :
  {
    "log-deps" :
    {
      "extend" : ["build-min"],

      "let" : {
        "Q_INCLUDES" : "${QXWEB_ALL}"
      },

      "log" :
      {
        "dependencies" : {
          "dot" : {
            "root" : "qx.module.Template",
            "compiled-class-size" : false
            },
          "type"   : "using",
          "phase" : null,
          "include-transitive-load-deps" : true,
          "force-fresh-deps" : true,
          "format" : "dot"
        }
      }
    },

    "build" : {
      "let" : {
        "QXDEBUG" : true
      }
    },

    "source" :
    {
      "extend" : ["website-common", "source-script"],

      "let" :
      {
        "OPTIMIZE" : [],
        "Q_INCLUDES" : "${QXWEB_ALL}",
        "BUILD_PATH" : "${SCRIPT_PATH}",
        "QXDEBUG" : true
      },

      "compile-options" :
      {
        "code" : { "except" : [ "*" ] },

        "paths" :
        {
          "file" : "${BUILD_PATH}/q-source.js",
          "app-root" : "",
          "loader-template" : "${QOOXDOO_PATH}/tool/data/generator/website.loader.source.tmpl.js"

        }
      }
    },

    "test-source" :
    {
      "run" : [
        "test-source-script"
      ]
    },

    "test-source-script" :
    {
      "extend" : ["testrunner-portable::source-script"],

      "desc" : "generates a combined source version of q and the portable test runner",

      "let" :
      {
        "TESTRUNNER_ORIGIN" : "external"
      },

      "environment" :
      {
        "qx.debug" : true
      },

      "include" : "${QXWEB_ALL}",

      "compile-options" :
      {
        "paths" :
        {
          "file" : "${TEST_SCRIPT_PATH}/q-test-source.js"
        },
        "code" :
        {
          "except" : ["*"]
        }
      }
    },

    "build-min-test" :
    {
      "extend" : ["build-min"],

      "let" : {
        "Q_INCLUDES" : "${QXWEB_ALL}"
      },

      "compile-options" :
      {
        "paths"  :
        {
          "=file" : "${TEST_SCRIPT_PATH}/q${QFILES_VERSION_PART}.min.js"
        }
      }
    },

    "test" :
    {
      "let" :
      {
        "BUILD_SCRIPT_FILE" : "${TEST_SCRIPT_PATH}/testrunner-portable.js"
      },

      "run" : [
        "build-min-test",
        "testrunner-portable::build-script",
        // and "testrunner-portable::gen-css"
        // but this is superseded by Grunt task
        // replace:templVarWithMinifiedCss
      ]
    },

    "test-module" :
    {
      "let" :
      {
        "BUILD_SCRIPT_FILE" : "${TEST_SCRIPT_PATH}/testrunner-portable.js",
        "BUILD_PATH" : "${TEST_SCRIPT_PATH}"
      },

      "run" : [
        "build-module-all-min",
        "testrunner-portable::build-script",
        // and "testrunner-portable::gen-css"
        // but this is superseded by Grunt task
        // replace:templVarWithMinifiedCss
      ]
    },


    "testrunner-portable::build-script" :
    {
      "let" : {
        "TESTRUNNER_VIEW" : "${TESTRUNNER_VIEW}"
      },

      "exclude" : "${QXWEB_ALL}",

      "config-warnings" :
      {
        "exclude" : "${QXWEB_ALL}"
      }
    },


    "api" :
    {
      "desc" : "Create a qx.Website Apiviewer",
      "run" : ["build-api", "api-data"]
    },


    "build-api" :
    {
      "let" : {
        "BUILD_PATH" : "${API_SCRIPT_PATH}"
      },
      "environment" :
      {
        "q.eventtypes" : "qx.module.event.Mouse,qx.module.event.Keyboard,qx.module.event.Native,qx.module.event.Orientation,qx.module.event.Touch,qx.module.event.Pointer,qx.module.event.Swipe,qx.module.event.Track,qx.module.event.Pinch,qx.module.event.Rotate,qx.module.event.Tap",
        "apiviewer.modulenamereplacements" : {
          "qx\\.module\\.": "",
          "qx\\.ui\\.website\\.": ""
        }
      },
      "run": [
        "build-module-all-min"
      ]
    },

    "api-data" : {
      "desc" : "Create API data for the qx.Website API viewer",
      "extend" : ["cache"],
      "library" : [
        {"manifest" : "${QOOXDOO_PATH}/framework/Manifest.json"}
      ],

      "include" : "${API_INCLUDE}",

      "api" : {
        "path" : "${API_SCRIPT_PATH}"
      }
    },

    "distclean" :
    {
      "desc"    : "remove local generated files and global cache",
      "extend"  : ["clean"]
    },

    "clean" :
    {
      "desc"    : "remove local generated files",
      "extend"  : ["cache"],

      "=clean-files" :
      {
        "Cleaning up script path" :
        [
          "${SCRIPT_PATH}/*"
        ],
        "Cleaning up api" :
        [
          "${API_SCRIPT_PATH}/*"
        ],
        "Cleaning up test" :
        [
          "${TEST_SCRIPT_PATH}/*"
        ]
      }
    }

    ,"source-server" :
    {
      "desc"  : "start a lightweight web server that exports the source version"
      ,"extend" : ["cache"]
      ,"compile-options" : { "paths" : { "app-root" : "." }}
      ,"web-server" :
      {
        "document-root" : "."   // calculate dynamically from libraries
        ,"server-port"  : 0
        ,"log-level"    : "error"  // use "info" for more console logging, "fatal" for none
        ,"allow-remote-access" : false
      }
    }

    ,"source-httpd-config":
    {
      "desc"  : "generate a httpd configuration for the source version"
      ,"extend" : ["cache"]
      ,"compile-options" : { "paths" : { "app-root" : "." }}
      ,"web-server-config" :
      {
        "output-dir" : "."
        ,"document-root" : "."
        ,"template-dir" : "${QOOXDOO_PATH}/tool/data/generator"
        ,"httpd-type" : "apache2"
        ,"httpd-host-url" : "http://localhost"
      }
    }
  }
}
