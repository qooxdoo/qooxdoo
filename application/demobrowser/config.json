{
  "name"    : "Demobrowser - config.json",

  /*
   * Main Demobrowser config file; runs external Python processes, to generate data
   * and dynamic config file for demos; the actual compile jobs are delegated to
   * config.demobrowser.json, which includes the generated config.demo.json.
   */

  "include" :
  [
    {
      "path" : "${QOOXDOO_PATH}/tool/data/config/application.json",
      "block" :
      [
        "common",
        "source",
        "source-script",
        "source-hybrid",
        "build",
        "build-script",
        "build-files",
        "build-resources",
        "translation",
        "info",
        "lint"
      ]
    },
    {
      "path" : "image.json"
    },
    {
      "path" : "fonts.json"
    }
  ],

  "export" :
  [
    "api",
    "api-data",
    "build",
    "build-data",
    "clean",
    "distclean",
    "fix",
    "image-combine",
    "info",
    "lint",
    "pretty",
    "source",
    "source-data",
    "source-hybrid",
    "translation",
    "migration",
    "validate-config",
    "validate-manifest",
    "make-font-map"
  ],

  "default-job" : "source",

  "let" :
  {
    "APPLICATION"  : "demobrowser",
    "API_EXCLUDE"  : ["qx.test.*", "${APPLICATION}.demo.*", "${APPLICATION}.test.*"],
    "QOOXDOO_PATH" : "../..",
    "THEME"        : "demobrowser.Theme"
  },

  "config-warnings" :
  {
    "job-shadowing" : ["translation", "lint"],

    "environment" : [ "non-literal-keys" ]
  },

  "jobs" :
  {
    "common" :
    {
      "desc"    : "common settings for Demobrowser jobs",

      "extend"  : [ "cache" ],

      "library" :
      [
        {
          "manifest" : "${QOOXDOO_PATH}/framework/Manifest.json"
        },

        {
          "manifest" : "Manifest.json"
        }
      ],

      "include" :
      [
        "${APPLICATION}.Application",
        "${THEME}"
      ],

      "environment" :
      {
        "qx.version" : "${QOOXDOO_VERSION}",
        "qx.revision" : "${QOOXDOO_REVISION}",
        "qx.application" : "${APPLICATION}.Application",
        "qx.theme" : "${THEME}",
        "qx.allowUrlSettings" : true
      },

      // the next is in since resource copying is done here for the demos as well
      "asset-let" :
      {
        "qx.icontheme" : ["Tango", "Oxygen"],
        "qx.theme"     : ["Indigo"]
      }
    },

    // -- Source jobs ----------------------------------------------------------

    "source-data" :
    {
      "desc"    : "creates a Json index of all demos (demodata.js), for Demobrowser's navigation pane",

      "extend" : ["common"],

      "shell" :
      {
        "command" : ["npm install", "node tool/generate-data.js source/script source/demo"]
      }
    },


    "source-demobrowser" :
    {
      "extend" : ["common"],

      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c config.demobrowser.json source"
      }
    },


    "source" :
    {
      "desc"    : "create source version of Demobrowser",

      "run" :
      [
        // preparations
        "source-data",
        // do the compiling with a different config
        "source-demobrowser"
      ]
    },


    "source-hybrid-demobrowser" :
    {
      "extend" : ["common"],

      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c config.demobrowser.json source-hybrid"
      }
    },


    "source-hybrid" :
    {
      "desc"    : "create source-hybrid version of Demobrowser",

      "run" :
      [
        "source-data",
        "source-hybrid-demobrowser"
      ]
    },


    // -- Build jobs -----------------------------------------------------------

    "build-data" :
    {
      "desc"    : "creates a Json index of all demos (demodata.js), for Demobrowser's navigation pane",

      "extend" : ["common"],

      "shell" :
      {
        "command" : ["npm install", "node tool/generate-data.js build/script source/demo"]
      }
    },


    "build-demobrowser" :
    {
      "extend" : ["common"],

      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c ./config.demobrowser.json build"
      }

    },


    "build" :
    {
      "desc"    : "create build version of Demobrowser",

      "run" :
      [
        // preparations
        "build-data",
        // do the compiling with a different config
        "build-demobrowser"
      ]
    }

    // -------------------------------------------------------------------------

    ,"info" :
    {
      "extend" : ["cache"],
      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c ./config.demobrowser.json info"
      }
    }

    ,"lint" :
    {
      "extend" : ["cache"],
      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c ./config.demobrowser.json lint"
      }
    }

    ,"translation" :
    {
      "extend" : ["cache"],
      "shell" :
      {
        "command" : "${PYTHON_CMD} ${QOOXDOO_PATH}/tool/bin/generator.py ${GENERATOR_OPTS} -c ./config.demobrowser.json translation"
      }
    }
  }
}
